{"mappings":";;;;AAAA;;;;AAMA,MAAM,mCAAa,CAAA,GAAA,oBAAa,AAAD;AAC/B,MAAM,kCAAY,CAAA,GAAA,cAAM,EAAE;AAE1B,aAAa;AAEb,sCAAsC;AAEtC,MAAM,4BAAM,CAAA,GAAA,cAAO,AAAD;AAElB,MAAM,iCAAW,CAAA,GAAA,WAAI,AAAD,EAAE,IAAI,CAAC,iCAAW;AACtC,MAAM,iCAAW,CAAA,GAAA,WAAI,AAAD,EAAE,IAAI,CAAC,gCAAU;AACrC,MAAM,6BAAO;AAEb,sCAAsC;AAEtC,MAAM,+BAAS,CAAA,GAAA,cAAM,EAAE,MAAM;AAE7B,0BAAI,GAAG,CAAC,CAAC,GAAG,KAAK,OAAS;IACxB,IAAI,MAAM,IAAI;IACd,QAAQ,GAAG,CAAC,UAAU,IAAI,WAAW;IACrC;AACF;AAEA,6BAAO,GAAG,CAAC,KAAK,CAAC,GAAG,MAAQ;IAC1B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,WAAW,CAAC;AACvC;AAEA,6BAAO,GAAG,CAAC,UAAU,CAAC,GAAG,MAAQ;IAC/B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,WAAW,CAAC;AACvC;AAEA,6BAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAQ;IAC7B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,gBAAgB,CAAC;AAC5C;AAEA,6BAAO,GAAG,CAAC,UAAU,CAAC,GAAG,MAAQ;IAC/B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,iBAAiB,CAAC;AAC7C;AAEA,6BAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAQ;IAC7B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,eAAe,CAAC;AAC3C;AAEA,6BAAO,GAAG,CAAC,SAAS,CAAC,GAAG,MAAQ;IAC9B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,gBAAgB,CAAC;AAC5C;AAEA,6BAAO,GAAG,CAAC,UAAU,CAAC,GAAG,MAAQ;IAC/B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,iBAAiB,CAAC;AAC7C;AAEA,6BAAO,GAAG,CAAC,aAAa,CAAC,GAAG,MAAQ;IAClC,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,oBAAoB,CAAC;AAChD;AAEA,6BAAO,GAAG,CAAC,WAAW,CAAC,GAAG,MAAQ;IAChC,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,kBAAkB,CAAC;AAC9C;AAEA,6BAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAQ;IAC7B,IAAI,QAAQ,CAAC,CAAC,EAAE,+BAAS,SAAS,CAAC;AACrC;AAEA,4BAA4B;AAE5B,0BAAI,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,OAAS;IAC/B,QAAQ,KAAK,CAAC,IAAI,KAAK;IACvB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;AACvB;AAEA,0BAAI,GAAG,CAAC,KAAK,CAAA,GAAA,cAAM,EAAE,MAAM,CAAC;AAE5B,0BAAI,GAAG,CAAC,KAAK;AAEb,0BAAI,MAAM,CAAC,4BAAM,IAAM;IACrB,QAAQ,GAAG,CAAC,qBAAqB;AACnC","sources":["index.js"],"sourcesContent":["import express from 'express';\nimport path from 'path';\n\nimport { dirname } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\n// @ts-ignore\n\n//const { __dirname } = fileDirName();\n\nconst app = express();\n\nconst BASE_DIR = path.join(__dirname, 'src');\nconst HTML_DIR = path.join(BASE_DIR, 'html');\nconst port = 3000;\n\n//console.log({ BASE_DIR, HTML_DIR });\n\nconst router = express.Router();\n\napp.use((_, res, next) => {\n  let now = new Date();\n  console.log('Time: ', now.toUTCString());\n  next();\n});\n\nrouter.get('/', (_, res) => {\n  res.sendFile(`${HTML_DIR}/index.html`);\n});\n\nrouter.get('/index', (_, res) => {\n  res.sendFile(`${HTML_DIR}/index.html`);\n});\n\nrouter.get('/css', (_, res) => {\n  res.sendFile(`${HTML_DIR}/css1-color.html`);\n});\n\nrouter.get('/named', (_, res) => {\n  res.sendFile(`${HTML_DIR}/named-color.html`);\n});\n\nrouter.get('/mix', (_, res) => {\n  res.sendFile(`${HTML_DIR}/color-mix.html`);\n});\n\nrouter.get('/wall', (_, res) => {\n  res.sendFile(`${HTML_DIR}/color-wall.html`);\n});\n\nrouter.get('/space', (_, res) => {\n  res.sendFile(`${HTML_DIR}/color-space.html`);\n});\n\nrouter.get('/relative', (_, res) => {\n  res.sendFile(`${HTML_DIR}/relative-color.html`);\n});\n\nrouter.get('/syntax', (_, res) => {\n  res.sendFile(`${HTML_DIR}/color-syntax.html`);\n});\n\nrouter.get('/hsl', (_, res) => {\n  res.sendFile(`${HTML_DIR}/hsl.html`);\n});\n\n// error handling middleware\n\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something broke!');\n});\n\napp.use('/', express.static(BASE_DIR));\n\napp.use('/', router);\n\napp.listen(port, () => {\n  console.log(' listening port ' + port);\n});\n"],"names":[],"version":3,"file":"start.js.map"}